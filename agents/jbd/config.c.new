
#include "jbd.h"

int jbd_config_add_params(json_value_t *j) { return 0; }

int jbd_config(void *h, int req, ...) {
	jbd_session_t *s = h;
	va_list va;
	void **vp;
	int r;

	r = 1;
	va_start(va,req);
	dprintf(1,"req: %d\n", req);
	switch(req) {
	case SOLARD_CONFIG_INIT:
		dprintf(1,"**** CONFIG INIT *******\n");
		/* 1st arg is AP */
		s->ap = va_arg(va,solard_agent_t *);

		/* Init JS */
		r = jbd_jsinit(s);
		break;
#if 0
	case SOLARD_CONFIG_MESSAGE:
		r = jbd_config_getmsg(s, va_arg(va,solard_message_t *));
		break;
#endif
	case SOLARD_CONFIG_GET_INFO:
		{
			json_value_t **vpp = va_arg(va,json_value_t **);
			dprintf(1,"vpp: %p\n", vpp);
			if (vpp) {
				r = jbd_get_info(s);
				if (!r) *vpp = s->info;
			}
		}
		break;
	case SOLARD_CONFIG_GET_DRIVER:
		dprintf(1,"GET_DRIVER called!\n");
		vp = va_arg(va,void **);
		if (vp) {
			*vp = s->tp;
			r = 0;
		}
		break;
	case SOLARD_CONFIG_GET_HANDLE:
		dprintf(1,"GET_HANDLE called!\n");
		vp = va_arg(va,void **);
		if (vp) {
			*vp = s->tp_handle;
			r = 0;
		}
		break;
	}
	dprintf(1,"returning: %d\n", r);
	va_end(va);
	return r;
}
