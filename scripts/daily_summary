#!/bin/bash

BILL_DAY=11
FORMAT="%-30.30s %s\n"

year=$(date '+%Y')
mon=$(date '+%m')
day=$(date '+%d')
#day=10
test $day -le $BILL_DAY && mon=$(date -d "last month" "+%m")
bill_start="${mon}-${BILL_DAY}"
bill_startp1="${mon}-$(echo "$BILL_DAY 1 + p" | dc)"
bill_end=$(date -d "${year}-${bill_startp1} next month" '+%m-%d')
bill_end_sec=$(date +%s -d "${year}-${bill_end}")
bill_sec=$(date +%s --date "${year}-${bill_start}")
today_sec=$(date +%s)
bill_end_days=$(echo "$bill_end_sec $today_sec - 86400 / p" | dc)
bill_days=$(echo "$today_sec $bill_sec - 86400 / p" | dc)
today="$(date '+%m-%d')"
if test $day -ge $BILL_DAY; then
	# go from bill_start to end of month then 1st to bill_day
	eotm=$(date -d "$(date +%Y%m01) +1 month -1 day" +%m-%d)
	sonm=$(date -d "$(date +%Y%m01) +1 month" +%m-%d)
	C1="date >= '${bill_start}' and date <= '${eotm}'"
	C2="date >= '${sonm}' and date < '${bill_end}'"
	end_year=$(date -d "$(date +%Y%m01) +1 month" +%Y)
else
	# from bill_day last month to end of month then 1st to bill_day
	eolm=$(date -d "$(date +%Y%m01) -1 day" +%m-%d)
	sotm=$(date -d "$(date +%Y%m01)" +%m-%d)
	C1="date >= '${bill_start}' and date <= '${eolm}'"
	C2="date >= '${sotm}' and date < '${bill_end}'"
	end_year=$(date -d "$(date +%Y%m01)" +%Y)
fi
mysql --database power -N -B -e "SELECT SUM(value) as (select sum(pu.${year}) as value from power_usage pu where ${C1}),(select sum(pu.${end_year}) as value from power_usage pu where ${C2}"
exit 0
data=$(mysql --database power -N -B -e "select * from power_usage where date = '$today';")
i=2
total=0
count=0
last_val=0
last_year=1999
while true
do
	((y=2017+(i-2)))
	v=$(echo $data | awk "{ print \$$i }")
	test -z "$v" && break
	if test "$v" != "NULL"; then
		total=$(echo "3k $total $last_val + p" | dc)
		((count++))
#		echo "$y $v"
		last_val=$v;
		last_year=$y
	fi
	((i++))
done
((count--))
avg=$(echo "3k $total $count / p" | dc)
#echo "Yesterday: ${last_val}kWh"
printf "$FORMAT" "Yesterday:" "${last_val}kWh"
printf "$FORMAT" "Historical average:" "${avg}kWh"
#echo '3k 39.896 42.592 / 100 *' | dc
if test $(echo "$avg > $last_val" | bc) -eq 1; then
	pct=$(echo "3k $last_val $avg / 100 * p" | dc)
	text="less"
else
	pct=$(echo "3k $avg $last_val / 100 * p" | dc)
	text="more"
fi
diff=$(echo "3k 100.0 $pct - p" | dc)
diff=$(printf "%.1f" "$diff")
printf "$FORMAT" "Yesterday vs Average:" "${diff}% ${text}"
total=$(mysql --database power -N -B -e "SELECT SUM(value) as (select sum(pu.${year}) as value from power_usage pu where ${C1}),(select sum(pu.${end_year}) as value from power_usage pu where ${C2}")
exit 0
echo ""
printf "$FORMAT" "Total usage this cycle:" "${total}kWh"
avg=$(echo "3k $total $bill_days / p" | dc)
printf "$FORMAT" "Daily average of total:" "${avg}kWh"
days=$(echo "3k $bill_days $bill_end_days + p" | dc)
pro=$(echo "$avg $days * p" | dc)
printf "$FORMAT" "Projected cycle usage:" "${pro}kWh"
cost=$(echo "2k $pro 0.108 * p" | dc)
printf "$FORMAT" "Projected cycle cost:" "\$$cost"
count=$(mysql --database power -N -B -e "select count(column_name) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = (select database())  AND TABLE_NAME = 'power_usage' AND COLUMN_NAME LIKE '2%' AND COLUMN_NAME != '${year}';")
query=$(mysql --database power -N -B -e "SELECT CONCAT('SELECT SUM(', group_concat('pu.',COLUMN_NAME SEPARATOR '+'), ') FROM power_usage pu')  FROM  INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = (select database())  AND TABLE_NAME = 'power_usage' AND COLUMN_NAME LIKE '2%' AND COLUMN_NAME != '${year}';")
total=$(mysql --database power -N -B -e "$query where date >= '${bill_start}' and date < '${bill_end}';")
avg=$(echo "3k $total $count / p" | dc)
echo ""
printf "$FORMAT" "Cycle average:" "${avg}kWh"
mc=$(echo "2k $avg 0.108 * p" | dc)
printf "$FORMAT" "Cycle average cost:" "\$${mc}"
if test $(echo "$avg > $pro" | bc) -eq 1; then
	pct=$(echo "3k $pro $avg / 100 * p" | dc)
	text="less"
else
	pct=$(echo "3k $avg $pro / 100 * p" | dc)
	text="more"
fi
diff=$(echo "3k 100.0 $pct - p" | dc)
diff=$(printf "%.1f" "$diff")
printf "$FORMAT" "Projected vs Historical:" "${diff}% ${text}"
if test "$text" = "less"; then
	save=$(echo "2k $mc $cost - p" | dc)
	printf "$FORMAT" "Projected savings:" "\$${save}"
fi
echo ""
mysql --database power -t -e "SELECT * FROM power_usage pu where ${C1} UNION ALL SELECT * FROM power_usage pu where ${C2}"
exit 0
